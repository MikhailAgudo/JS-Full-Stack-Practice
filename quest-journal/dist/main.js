(()=>{"use strict";const e=e=>String(e),t=e=>e,n=e=>(e>3?e=3:e<1&&(e=1),e),s=e=>String(e),a=(()=>{let a=[];const r=e=>a[e],l=(e,t)=>a[e].getTask(t);return{quests:a,addQuest:e=>{let t=(e=>{let t=[],n=[];return{getTitle:()=>e,getTasks:()=>t,getTaskAmount:()=>t.length,getTask:e=>t[e],addTask:e=>{t.push(e)},removeTask:e=>{t.splice(e,1)},processSwap:e=>{n.length<2&&(e=>{n.push(e)})(e),n.length>=2&&(()=>{const e=n.shift(),s=n.shift();let a=t[e];t[e]=t[s],t[s]=a})()}}})(e=s(e));a.push(t)},removeQuest:e=>{a.splice(e,1)},getQuests:()=>a,getQuest:r,resetQuests:()=>{a=[]},addTask:(t,n)=>{let s=(e=>({getTitle:()=>title,getDescription:()=>e,getDueDate:()=>dueDate,getPriority:()=>priority,setTitle:e=>{title=e},setDescription:t=>{e=t},setDueDate:e=>{dueDate=e},setPriority:e=>{priority=e}}))(t=e(t));r(n).addTask(s)},removeTask:(e,t)=>{r(e).removeTask(t)},renameTitle:(t,n,s)=>{s=e(s),l(t,n).setTitle(s)},changeDescription:(t,n,s)=>{s=e(s),l(t,n).setDescription(s)},changeDate:(e,n,s)=>{s=t(s),l(e,n).setDueDate(s)},changePriority:(e,t,s)=>{s=n(s),l(e,t).setPriority(s)}}})(),r={render:(e,t,n)=>{let s=document.createElement("div");s.classList.add("task-container");let r=(e=>{let t=document.createElement("div");return t.classList.add("task-area"),t.textContent=e,t})(e.getDescription()),l=((e,t)=>{let n=document.createElement("button");return n.textContent="Done",n.addEventListener("click",(n=>{a.removeTask(e,t),o.renderTaskTab()})),n})(t,n);return s.appendChild(l),s.appendChild(r),s}},l=(()=>{let e=!1,t=!1;const n=()=>{e=!1===e},s=()=>{t=!1===t},r=e=>{let t=document.createElement("input");return t.type="text",t.placeholder=e,t};return{getNewQuestPrompt:()=>e,getNewTaskPrompt:()=>t,createAddQuestButton:()=>{let e=document.createElement("button");return e.textContent="New Quest",e.addEventListener("click",(e=>{n(),o.renderQuestTab()})),e},createAddQuestPrompt:()=>{let e=document.createElement("div"),t=r("Quest name..."),s=(e=>{let t=document.createElement("button");return t.textContent="Add",t.addEventListener("click",(t=>{a.addQuest(e.value),n(),o.renderQuestTab()})),t})(t);return e.appendChild(t),e.appendChild(s),e},createAddTaskButton:()=>{let e=document.createElement("button");return e.textContent="New Task",e.addEventListener("click",(()=>{s(),o.renderTaskTab()})),e},createAddTaskPrompt:()=>{let e=document.createElement("div"),t=r("Task name..."),n=(e=>{let t=document.createElement("button");return t.textContent="Add",t.addEventListener("click",(()=>{let t=o.getDisplayedQuestIndex();a.addTask(e.value,t),s(),o.renderTaskTab()})),t})(t);return e.appendChild(t),e.appendChild(n),e}}})(),d=(()=>{const e=(t,n,s,a)=>{if(-1===s)return n;switch(a){case"title":n.unshift(t[s].getTitle());break;case"description":n.unshift(t[s].getDescription());break;case"date":n.unshift(t[s].getDueDate())}return e(t,n,s-=1,a)};return{transformToUIReadable:e,questsToTitles:e=>{let t=[];for(let n=0;n<e.length;n++){let s=e[n].getTitle();t.push(s)}return t}}})(),o=(()=>{let e=0,t=document.createElement("div"),n=document.createElement("div");const s=()=>(t.classList.add("quest-section"),t),o=()=>(n.classList.add("task-section"),n),i=()=>{k(),u();let e=D();c(e)},u=()=>{let e=null;e=!0===l.getNewQuestPrompt()?l.createAddQuestPrompt():l.createAddQuestButton(),t.appendChild(e)},c=e=>{for(let n=0;n<e.length;n++){let s=g(e,n);t.appendChild(s)}},g=(e,t)=>{let n=document.createElement("button");return n.textContent=e[t],n.dataset.index=t,n.addEventListener("click",(e=>{Q(t)})),n},p=()=>{h(),T();let e=v();m(e)},T=()=>{let e=null;e=!0===l.getNewTaskPrompt()?l.createAddTaskPrompt():l.createAddTaskButton(),n.appendChild(e)},m=t=>{for(let s=0;s<t.length;s++){let a=r.render(t[s],e,s);n.appendChild(a)}},k=()=>{t.innerHTML=""},h=()=>{n.innerHTML=""},Q=t=>{e=t,D(),i(),v(),p()},D=()=>d.questsToTitles(a.quests),v=()=>a.quests[e].getTasks();return{initializeJournal:()=>{let e=document.querySelector(".journal-section"),t=s(),n=o();e.appendChild(t),e.appendChild(n)},renderQuestTab:i,renderTaskTab:p,getDisplayedQuestIndex:()=>e,getQuestTitles:D,getTasks:v}})(),i=((()=>{let e=0,t=[];const n=()=>{localStorage.setItem("questLength",e)},s=e=>{let n="quest"+String(e),a=t.shift();a=String(a),n+="taskLength",localStorage.setItem(n,a),0===t.length||s(e+1)},r=(e,t)=>{let n="quest";n+=e=String(e),localStorage.setItem(n,t.getTitle()),l(t.getTasks(),n)},l=(e,t)=>{console.log(e.length);for(let n=0;n<e.length;n++){let s=t;s+="task",s+=n,localStorage.setItem(s,e[n].getDescription())}},d=()=>{e=a.getQuests().length},o=()=>{let e=a.getQuests();t=[];for(let n=0;n<e.length;n++){let s=e[n].getTaskAmount();t.unshift(s)}},i=()=>{localStorage.clear()}})(),(()=>{let e=null,t=[];const n=(e,s)=>{let a="quest"+String(e)+"taskLength",r=localStorage.getItem(a);t.push(r),e+1===s||n(e+1,s)},s=(e,n)=>{let s=t[n];e+="task";for(let t=0;t<s;t++){let s=e+t,r=localStorage.getItem(s);a.addTask(r,n)}};return{load:()=>{(()=>{let t=localStorage.getItem("questLength");t=parseInt(t),"number"==typeof t&&(e=t)})(),n(0,e),(()=>{for(let t=0;t<e;t++){String(t);let e="quest"+t,n=localStorage.getItem(e);a.addQuest(n),s(e,t)}})(),s()}}})());o.initializeJournal(),i.load(),a.addQuest("Joining the Legion"),a.addTask("In order to prove myself to Legate Rikke, I am to clear out the bandits living at Fort Hraggstad.",1),a.addTask("Report to Legate Rikke.",1),a.addQuest("The Jagged Crown"),a.addQuest("Message to Whiterun"),(()=>{let e=o.getQuestTitles();o.renderQuestTab(e),o.getDisplayedQuestIndex(),o.renderTaskTab(o.getTasks())})()})();